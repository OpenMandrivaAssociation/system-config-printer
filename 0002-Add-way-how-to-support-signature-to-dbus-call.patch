From 2ac2d7c9da7bcef413be2854e8356a354d2d7281 Mon Sep 17 00:00:00 2001
From: Tomas Korbar <tkorbar@redhat.com>
Date: Mon, 19 Nov 2018 13:29:38 +0100
Subject: [PATCH 02/11] Add way how to support signature to dbus call

- If dbus method is called with empty array as an argument then
dbus is not able to determine type of arguments and throws Error
- This commit adds way how to add it in such case
---
 authconn.py                  | 4 ++++
 cupspk.py                    | 4 +++-
 troubleshoot/DeviceListed.py | 1 +
 3 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/authconn.py b/authconn.py
index 0f3021cb..37ff2fcf 100644
--- a/authconn.py
+++ b/authconn.py
@@ -233,6 +233,10 @@ class Connection:
 
     def _authloop (self, fname, fn, *args, **kwds):
         self._passes = 0
+        # remove signature if dbus is not being used and signature is provided
+        if not self._using_polkit():
+            kwds.pop('signature', None)
+
         c = self._connection
         retry = False
         while True:
diff --git a/cupspk.py b/cupspk.py
index c9aab035..5b863b43 100644
--- a/cupspk.py
+++ b/cupspk.py
@@ -99,6 +99,8 @@ class Connection:
 
     def _call_with_pk_and_fallback(self, use_fallback, pk_function_name, pk_args, fallback_function, *args, **kwds):
         pk_function = None
+        # take signature from kwds if is provided
+        dbus_args_signature = kwds.pop('signature', None)
 
         if not use_fallback:
             cups_pk = self._get_cups_pk()
@@ -116,7 +118,7 @@ class Connection:
         while True:
             try:
                 # FIXME: async call or not?
-                pk_retval = pk_function(*pk_args)
+                pk_retval = pk_function(*pk_args, signature = dbus_args_signature)
 
                 # if the PK call has more than one return values, we pop the
                 # first one as the error message
diff --git a/troubleshoot/DeviceListed.py b/troubleshoot/DeviceListed.py
index 45617bdc..6e305439 100644
--- a/troubleshoot/DeviceListed.py
+++ b/troubleshoot/DeviceListed.py
@@ -86,6 +86,7 @@ class DeviceListed(Question):
             self.authconn = answers['_authenticated_connection']
             try:
                 self.op = TimedOperation (self.authconn.getDevices,
+                                          kwargs={'signature': 'iiasas'},
                                           parent=parent)
                 devices = self.op.run ()
                 devices_list = []
-- 
2.20.1

